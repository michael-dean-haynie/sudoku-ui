/* Variables */
:root {
    --analysis-base-color: blue;
    --inspected-cell-color: yellow;
    --contributing-cell-color: orange;
    --contributing-value-color: var(--contributing-cell-color);
    --progressed-value-color: green;
    --progressed-note-color: var(--progressed-value-color);

    --cell-border-pctg: 5%;
}

/* debugging outline */
* {
    /* outline: 1px solid black; */
}

/* Board */
#board {
    /* temp find a better way */
    width: 700px;
    height: 700px;

    display: grid;
    grid-template-rows: repeat(3, 1fr);
    grid-template-columns: repeat(3, 1fr);

    row-gap: 2px;
    column-gap: 2px;
    background-color: black;
    border: 2px solid black;
}

/* Blocks */
.block {
    display: grid;
    grid-template-rows: repeat(3, 1fr);
    grid-template-columns: repeat(3, 1fr);

    row-gap: 1px;
    column-gap: 1px;
    background-color: black;
}

/* Cells */
.cell {
    display: grid;
    grid-template-rows: repeat(3, 1em);
    grid-template-columns: repeat(3, 1em);
    justify-content: space-evenly;
    align-content: space-evenly;
    background-color:white;
}

/* Notes */
.note {
    display: flex;
    align-items: center;
    justify-content: center;
}

.note.eliminated {
    /*visibility:hidden;*/
    color: transparent;
}

/* Values */
.value {
    display:none;
    grid-row: 1 / -1;
    grid-column: 1 / -1;
}

/* Solved Cells */
.cell.solved .note {
    display:none;
}

.cell.solved .value{
    display:flex;
    align-items: center;
    justify-content: center;
    font-size: 2em;
}


/* Context Related Styles */
.analysis-base-cell {
    --cell-border-color: var(--analysis-base-color);
    background:
            linear-gradient(to top, var(--cell-border-color) 0 var(--cell-border-pctg), transparent var(--cell-border-pctg) 100%),
            linear-gradient(to right, var(--cell-border-color) 0 var(--cell-border-pctg), transparent var(--cell-border-pctg) 100%),
            linear-gradient(to bottom, var(--cell-border-color) 0 var(--cell-border-pctg), transparent var(--cell-border-pctg) 100%),
            linear-gradient(to left, var(--cell-border-color) 0 var(--cell-border-pctg), transparent var(--cell-border-pctg) 100%);
    background-color: white;
}

.inspected-cell {
    --cell-border-color: var(--inspected-cell-color);
    background:
            linear-gradient(to top, var(--cell-border-color) 0 var(--cell-border-pctg), transparent var(--cell-border-pctg) 100%),
            linear-gradient(to right, var(--cell-border-color) 0 var(--cell-border-pctg), transparent var(--cell-border-pctg) 100%),
            linear-gradient(to bottom, var(--cell-border-color) 0 var(--cell-border-pctg), transparent var(--cell-border-pctg) 100%),
            linear-gradient(to left, var(--cell-border-color) 0 var(--cell-border-pctg), transparent var(--cell-border-pctg) 100%);
    background-color: white;
}

.contributing-cell {
    --cell-border-color: var(--contributing-cell-color);
    background:
            linear-gradient(to top, var(--cell-border-color) 0 var(--cell-border-pctg), transparent var(--cell-border-pctg) 100%),
            linear-gradient(to right, var(--cell-border-color) 0 var(--cell-border-pctg), transparent var(--cell-border-pctg) 100%),
            linear-gradient(to bottom, var(--cell-border-color) 0 var(--cell-border-pctg), transparent var(--cell-border-pctg) 100%),
            linear-gradient(to left, var(--cell-border-color) 0 var(--cell-border-pctg), transparent var(--cell-border-pctg) 100%);
    background-color: white;
}
.contributing-value {
    /* TODO: improve or decide if necessary */
    /*background-color: var(--contributing-value-color);*/
}

/* Progressed Styles */
.progressed-value {
    background-color: var(--progressed-value-color);
}
.progressed-note {
    background-color: var(--progressed-note-color);
}

/* Must come after bordered cells using "background" property */
.focused-unit {
    background-color: lightblue;
}